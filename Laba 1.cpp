// ConsoleApplication 4.2.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <stdarg.h>
#include <bitset>

using namespace std;

int main()
{
	cout << sizeof(int) << endl;
	cout << sizeof(short int) << endl;
	cout << sizeof(long int) << endl;
	cout << sizeof(float) << endl;
	cout << sizeof(double) << endl;
	cout << sizeof(long double) << endl;
	cout << sizeof(char) << endl;
	cout << sizeof(bool) << endl;
	cout << "\n\n\n";

	int value; // значение числа
	cin >> value;
	int order = sizeof(int) * 8; // количество разрядов
	unsigned int mask = 1 << order - 1; // маска побитового сравнения

	for (int i = 1; i <= order; i++)
	{
		putchar(value & mask ? '1' : '0'); // если 1, то возвращается 1, иначе 0
		value <<= 1; // побитовый сдвиг числа
		if (i % 8 == 0)
		{
			putchar(' ');
		}
		if (i % order - 1 == 0)
		{
			putchar(' ');
		}
	}
	cout << "\n 3:";


	union // объединение переменных
	{
		float pi;
		int a;
	};

	mask = 1 << order - 1; // маска побитового сравнения
	for (int i = 1; i <= order; i++)
	{
		putchar(a & mask ? '1' : '0'); // если 1, то возвращается 1, иначе 0
		a <<= 1; // побитовый сдвиг
		if (i % 8 == 0)
		{
			putchar(' ');
		}
		if (i % order - 1 == 0)
		{
			putchar(' ');
		}
	}

	union
	{
		double pi_1;
		int b[2];
	};

	mask = 1 << order - 1; // маска побитового сравнения
	for (int j = 0; j <= 1; j++) {
		for (int i = 1; i <= order; i++)
		{
			putchar(b[j] & mask ? '1' : '0'); // если 1, то возвращается 1, иначе 0
			b[j] <<= 1; // побитовый сдвиг
			if (i % 8 == 0)
			{
				putchar(' ');
			}
			if (i % order - 1 == 0)
			{
				putchar(' ');
			}
		}
	}

}


// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
